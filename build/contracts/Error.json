{
  "contractName": "Error",
  "abi": [
    {
      "inputs": [],
      "name": "num",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_i",
          "type": "uint256"
        }
      ],
      "name": "testRequire",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_i",
          "type": "uint256"
        }
      ],
      "name": "testRevert",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "testAssert",
      "outputs": [],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"num\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAssert\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"testRequire\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"testRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/kelche codes/desktop/SolidityByExample/contracts/Error.sol\":\"Error\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/kelche codes/desktop/SolidityByExample/contracts/Error.sol\":{\"keccak256\":\"0x9a8ef83e42a7bb943247a8d375b5937c39b8b61c5c127872653dafe4cc7b8bb6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2f58397061d8fb09330a1069121a6b7023843549dee9d7bba104ef0216aa4bd6\",\"dweb:/ipfs/QmUMJKodDs5duTDicXgUfqR8nVKBdZLsuneAtQbykJaei4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610325806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806320987767146100515780632b813bc01461006d5780634e70b1dc14610077578063b8bd717f14610095575b600080fd5b61006b60048036038101906100669190610192565b6100b1565b005b6100756100f7565b005b61007f610131565b60405161008c9190610250565b60405180910390f35b6100af60048036038101906100aa9190610192565b610137565b005b600a81116100f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100eb90610210565b60405180910390fd5b50565b600080541461012f577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b565b60005481565b600a811161017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017190610230565b60405180910390fd5b50565b60008135905061018c816102d8565b92915050565b6000602082840312156101a457600080fd5b60006101b28482850161017d565b91505092915050565b60006101c8601c8361026b565b91506101d382610286565b602082019050919050565b60006101eb601e8361026b565b91506101f6826102af565b602082019050919050565b61020a8161027c565b82525050565b60006020820190508181036000830152610229816101bb565b9050919050565b60006020820190508181036000830152610249816101de565b9050919050565b60006020820190506102656000830184610201565b92915050565b600082825260208201905092915050565b6000819050919050565b7f496e707574206d75737420626520677265617465207468616e20313000000000600082015250565b7f496e707574206d757374202062652067726561746572207468616e2031300000600082015250565b6102e18161027c565b81146102ec57600080fd5b5056fea2646970667358221220b9b922c47fa974e0beebeee09997f1ecb5bd87e7dee0ff2474bef37f3fbcdbab64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806320987767146100515780632b813bc01461006d5780634e70b1dc14610077578063b8bd717f14610095575b600080fd5b61006b60048036038101906100669190610192565b6100b1565b005b6100756100f7565b005b61007f610131565b60405161008c9190610250565b60405180910390f35b6100af60048036038101906100aa9190610192565b610137565b005b600a81116100f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100eb90610210565b60405180910390fd5b50565b600080541461012f577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b565b60005481565b600a811161017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017190610230565b60405180910390fd5b50565b60008135905061018c816102d8565b92915050565b6000602082840312156101a457600080fd5b60006101b28482850161017d565b91505092915050565b60006101c8601c8361026b565b91506101d382610286565b602082019050919050565b60006101eb601e8361026b565b91506101f6826102af565b602082019050919050565b61020a8161027c565b82525050565b60006020820190508181036000830152610229816101bb565b9050919050565b60006020820190508181036000830152610249816101de565b9050919050565b60006020820190506102656000830184610201565b92915050565b600082825260208201905092915050565b6000819050919050565b7f496e707574206d75737420626520677265617465207468616e20313000000000600082015250565b7f496e707574206d757374202062652067726561746572207468616e2031300000600082015250565b6102e18161027c565b81146102ec57600080fd5b5056fea2646970667358221220b9b922c47fa974e0beebeee09997f1ecb5bd87e7dee0ff2474bef37f3fbcdbab64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3119:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:4",
                "type": ""
              }
            ],
            "src": "7:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:4",
                "type": ""
              }
            ],
            "src": "152:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "566:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "576:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "642:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "647:2:4",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "583:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "583:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "576:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "748:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902",
                      "nodeType": "YulIdentifier",
                      "src": "659:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "659:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "659:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "761:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "772:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "777:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "768:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "768:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "761:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "554:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "562:3:4",
                "type": ""
              }
            ],
            "src": "420:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "938:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "948:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1014:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1019:2:4",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "955:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "955:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "948:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1120:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491",
                      "nodeType": "YulIdentifier",
                      "src": "1031:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1031:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1031:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1133:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1144:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1149:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1133:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "926:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "934:3:4",
                "type": ""
              }
            ],
            "src": "792:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1229:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1246:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1269:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1251:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1239:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1217:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1224:3:4",
                "type": ""
              }
            ],
            "src": "1164:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1459:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1469:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1481:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1492:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1477:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1469:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1516:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1527:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1512:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1512:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1535:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1541:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1531:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1531:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1505:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1505:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1505:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1561:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1695:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1569:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1569:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1561:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1439:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1454:4:4",
                "type": ""
              }
            ],
            "src": "1288:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1884:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1894:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1906:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1917:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1902:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1894:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1941:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1952:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1937:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1937:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1960:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1966:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1956:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1956:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1930:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1930:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1930:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1986:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2120:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1994:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1986:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1864:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1879:4:4",
                "type": ""
              }
            ],
            "src": "1713:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2236:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2246:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2258:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2269:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2254:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2254:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2246:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2326:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2339:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2350:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2335:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2282:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2282:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2282:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2208:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2220:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2231:4:4",
                "type": ""
              }
            ],
            "src": "2138:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2462:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2479:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2484:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2472:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2472:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2500:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2519:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2524:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2515:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2515:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2500:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2434:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2439:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2450:11:4",
                "type": ""
              }
            ],
            "src": "2366:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2586:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2596:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2607:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2596:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2568:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2578:7:4",
                "type": ""
              }
            ],
            "src": "2541:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2730:72:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2752:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2760:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2748:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2748:14:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2764:30:4",
                        "type": "",
                        "value": "Input must be greate than 10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2741:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2741:54:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2741:54:4"
                }
              ]
            },
            "name": "store_literal_in_memory_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2722:6:4",
                "type": ""
              }
            ],
            "src": "2624:178:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2914:74:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2936:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2944:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2932:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2932:14:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2948:32:4",
                        "type": "",
                        "value": "Input must  be greater than 10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2925:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2925:56:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2925:56:4"
                }
              ]
            },
            "name": "store_literal_in_memory_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2906:6:4",
                "type": ""
              }
            ],
            "src": "2808:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3037:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3094:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3103:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3106:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3096:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3096:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3096:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3060:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3085:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3067:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3067:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3057:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3047:2:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3030:5:4",
                "type": ""
              }
            ],
            "src": "2994:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function store_literal_in_memory_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902(memPtr) {\n\n        mstore(add(memPtr, 0), \"Input must be greate than 10\")\n\n    }\n\n    function store_literal_in_memory_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491(memPtr) {\n\n        mstore(add(memPtr, 0), \"Input must  be greater than 10\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "63:922:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "63:922:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;694:288;;;:::i;:::-;;667:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;85:299;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;392:267;583:2;577;:8;573:79;;602:38;;;;;;;;;;:::i;:::-;;;;;;;;573:79;392:267;:::o;694:288::-;972:1;965:3;;:8;958:16;;;;;;;;;;;;694:288::o;667:18::-;;;;:::o;85:299::-;339:2;334;:7;326:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;85:299;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:366::-;562:3;583:67;647:2;642:3;583:67;:::i;:::-;576:74;;659:93;748:3;659:93;:::i;:::-;777:2;772:3;768:12;761:19;;566:220;;;:::o;792:366::-;934:3;955:67;1019:2;1014:3;955:67;:::i;:::-;948:74;;1031:93;1120:3;1031:93;:::i;:::-;1149:2;1144:3;1140:12;1133:19;;938:220;;;:::o;1164:118::-;1251:24;1269:5;1251:24;:::i;:::-;1246:3;1239:37;1229:53;;:::o;1288:419::-;1454:4;1492:2;1481:9;1477:18;1469:26;;1541:9;1535:4;1531:20;1527:1;1516:9;1512:17;1505:47;1569:131;1695:4;1569:131;:::i;:::-;1561:139;;1459:248;;;:::o;1713:419::-;1879:4;1917:2;1906:9;1902:18;1894:26;;1966:9;1960:4;1956:20;1952:1;1941:9;1937:17;1930:47;1994:131;2120:4;1994:131;:::i;:::-;1986:139;;1884:248;;;:::o;2138:222::-;2231:4;2269:2;2258:9;2254:18;2246:26;;2282:71;2350:1;2339:9;2335:17;2326:6;2282:71;:::i;:::-;2236:124;;;;:::o;2366:169::-;2450:11;2484:6;2479:3;2472:19;2524:4;2519:3;2515:14;2500:29;;2462:73;;;;:::o;2541:77::-;2578:7;2607:5;2596:16;;2586:32;;;:::o;2624:178::-;2764:30;2760:1;2752:6;2748:14;2741:54;2730:72;:::o;2808:180::-;2948:32;2944:1;2936:6;2932:14;2925:56;2914:74;:::o;2994:122::-;3067:24;3085:5;3067:24;:::i;:::-;3060:5;3057:35;3047:2;;3106:1;3103;3096:12;3047:2;3037:79;:::o",
  "source": "//SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.4;\r\n\r\ncontract Error {\r\n    function testRequire(uint256 _i) public pure {\r\n        // Require should be used to validate conditions such as\r\n        // -inputs\r\n        //-conditions before execution\r\n        //- return values from calls to other functions\r\n\r\n        require(_i > 10, \"Input must  be greater than 10\");\r\n    }\r\n\r\n    function testRevert(uint256 _i) public pure {\r\n        // Revert is useful when the condition to check is complex\r\n        //This code does the exact same thing as example\r\n        if (_i <= 10) {\r\n            revert(\"Input must be greate than 10\");\r\n        }\r\n    }\r\n\r\n    uint256 public num;\r\n\r\n    function testAssert() public view {\r\n        //aser should only be used to test for internal errors\r\n        //and to check invariants.\r\n\r\n        // here we asert tgat num is always equal to 0\r\n        // since it is imposible to update the value of num\r\n        assert(num == 0);\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/kelche codes/desktop/SolidityByExample/contracts/Error.sol",
  "ast": {
    "absolutePath": "/C/Users/kelche codes/desktop/SolidityByExample/contracts/Error.sol",
    "exportedSymbols": {
      "Error": [
        184
      ]
    },
    "id": 185,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 143,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 184,
        "linearizedBaseContracts": [
          184
        ],
        "name": "Error",
        "nameLocation": "72:5:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "130:254:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 149,
                          "name": "_i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "334:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "339:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "334:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e707574206d757374202062652067726561746572207468616e203130",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "343:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491",
                          "typeString": "literal_string \"Input must  be greater than 10\""
                        },
                        "value": "Input must  be greater than 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491",
                          "typeString": "literal_string \"Input must  be greater than 10\""
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "326:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "326:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "326:50:2"
                }
              ]
            },
            "functionSelector": "b8bd717f",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRequire",
            "nameLocation": "94:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_i",
                  "nameLocation": "114:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "106:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "106:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "105:12:2"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "130:0:2"
            },
            "scope": 184,
            "src": "85:299:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "436:223:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 161,
                      "name": "_i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "577:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "583:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "577:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "nodeType": "IfStatement",
                  "src": "573:79:2",
                  "trueBody": {
                    "id": 168,
                    "nodeType": "Block",
                    "src": "587:65:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "496e707574206d75737420626520677265617465207468616e203130",
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "609:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902",
                                "typeString": "literal_string \"Input must be greate than 10\""
                              },
                              "value": "Input must be greate than 10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902",
                                "typeString": "literal_string \"Input must be greate than 10\""
                              }
                            ],
                            "id": 164,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "602:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "602:38:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 167,
                        "nodeType": "ExpressionStatement",
                        "src": "602:38:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "20987767",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert",
            "nameLocation": "401:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "_i",
                  "nameLocation": "420:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "412:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:12:2"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:2"
            },
            "scope": 184,
            "src": "392:267:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4e70b1dc",
            "id": 173,
            "mutability": "mutable",
            "name": "num",
            "nameLocation": "682:3:2",
            "nodeType": "VariableDeclaration",
            "scope": 184,
            "src": "667:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 172,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "667:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "728:254:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 177,
                          "name": "num",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "965:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "972:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "965:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 176,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "958:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "958:16:2"
                }
              ]
            },
            "functionSelector": "2b813bc0",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAssert",
            "nameLocation": "703:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:2"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:0:2"
            },
            "scope": 184,
            "src": "694:288:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 185,
        "src": "63:922:2",
        "usedErrors": []
      }
    ],
    "src": "36:951:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/kelche codes/desktop/SolidityByExample/contracts/Error.sol",
    "exportedSymbols": {
      "Error": [
        184
      ]
    },
    "id": 185,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 143,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 184,
        "linearizedBaseContracts": [
          184
        ],
        "name": "Error",
        "nameLocation": "72:5:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "130:254:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 149,
                          "name": "_i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "334:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "339:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "334:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e707574206d757374202062652067726561746572207468616e203130",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "343:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491",
                          "typeString": "literal_string \"Input must  be greater than 10\""
                        },
                        "value": "Input must  be greater than 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ace83124412de3d3c134df8e3de39301ac67a47d83a8fbeb62fb4d9d913ec491",
                          "typeString": "literal_string \"Input must  be greater than 10\""
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "326:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "326:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "326:50:2"
                }
              ]
            },
            "functionSelector": "b8bd717f",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRequire",
            "nameLocation": "94:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_i",
                  "nameLocation": "114:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "106:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "106:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "105:12:2"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "130:0:2"
            },
            "scope": 184,
            "src": "85:299:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "436:223:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 161,
                      "name": "_i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "577:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "583:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "577:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "nodeType": "IfStatement",
                  "src": "573:79:2",
                  "trueBody": {
                    "id": 168,
                    "nodeType": "Block",
                    "src": "587:65:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "496e707574206d75737420626520677265617465207468616e203130",
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "609:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902",
                                "typeString": "literal_string \"Input must be greate than 10\""
                              },
                              "value": "Input must be greate than 10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_0f1562d170252bbf1d4ee9e82cdcf82fe3ce982dacf94a03202365cb290ef902",
                                "typeString": "literal_string \"Input must be greate than 10\""
                              }
                            ],
                            "id": 164,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "602:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "602:38:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 167,
                        "nodeType": "ExpressionStatement",
                        "src": "602:38:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "20987767",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert",
            "nameLocation": "401:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "_i",
                  "nameLocation": "420:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "412:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:12:2"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:2"
            },
            "scope": 184,
            "src": "392:267:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4e70b1dc",
            "id": 173,
            "mutability": "mutable",
            "name": "num",
            "nameLocation": "682:3:2",
            "nodeType": "VariableDeclaration",
            "scope": 184,
            "src": "667:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 172,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "667:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "728:254:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 177,
                          "name": "num",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "965:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "972:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "965:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 176,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "958:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "958:16:2"
                }
              ]
            },
            "functionSelector": "2b813bc0",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAssert",
            "nameLocation": "703:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:2"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:0:2"
            },
            "scope": 184,
            "src": "694:288:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 185,
        "src": "63:922:2",
        "usedErrors": []
      }
    ],
    "src": "36:951:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x057c06D2DD96AF8FB136BFBb2451E64244839ADD",
      "transactionHash": "0x4cd799592c80a7fe22229163705dae56b02dd05eb3c450c36b06780e51ec0ddb"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-03T12:02:23.592Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}